spring.datasource.url=jdbc:mysql://mysql-38341-0.cloudclusters.net:38341/employee
spring.datasource.username=admin
spring.datasource.password=rPSDGE6k
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true
#Basically the above code is our DB Connection related properties.


server.error.include-stacktrace=never
#The above line was added to remove the big trace that we were getting when our API was throwing errors
#In our response body we also get trace key value pair but I removed it because the it contained a lot of unnecessary
# data specially for such simple CRUD API.

management.endpoints.web.exposure.include = *
#To change which endpoints are exposed, use the following technology-specific include and exclude properties:
#management.endpoints.web.exposure.include
#
#info, health


management.endpoint.health.show-details =always
#The management.endpoint.health.show-details configuration property controls the level of details each health endpoint can expose.
#
#For instance, if we set this property to always, then Spring Boot will always return the details field in the health report,


java.runtime.version=11
server.error.whitelabel.enabled=false
#so if we try to navigate to some path other than what we have controlled in our controller we end up with whitelabel error page.
#So I wrote the above code to remove it.

info.app.name=Employee Manager
info.app.description=Simple Spring Boot application to manage Employees
info.app.version= 1.0 - Beta

#bascially above three are projections of our static properties info.

management.endpoints.web.base-path=/actuator
#Sometimes, it is useful to customize the prefix for the management endpoints. For example,
# your application might already use /actuator for another purpose. You can use the management.endpoints.web.base-path
